

https://www.udemy.com/spring-framework-5-beginner-to-guru/learn/v4/t/lecture/7403546?start=0
https://www.tutorialspoint.com/spring/spring_bean_post_processors.htm

Instantiate
Populate Properties
Call setBeanName of BeanNameAware
Call SetBeanFactoryof BeanFactoryAware
Call setApplicationContext of ApplicationContextAware
Preinitialization (Bean PostProcessors)
afterPropertiesSet of InitializingBeans
Custom Init Method
Post Initialization (BeanPostProcessors)
  Bean Ready to Use
Container Shutdown
Disposable Bean's destroy()
Call Custom Destroy Method




CODE

@Component
public class LifeCycleDemoBean implements InitializingBean, DisposableBean, BeanNameAware,
        BeanFactoryAware, ApplicationContextAware{

	//override methods

	public LifeCycleDemoBean(){
		sysout("The LifeCycleBean has been terminated");
	}

	@Override
	public void SetApplicationContext(ApplicationContext applicationContext) throws BeanException {
		sysout.("## ApplicationContext has been set");
	}
	
	public void beforeInit(){
		sysout("## before Init - called by Bean Post Processor");
	}
	
	public void afterInit(){
		sysout("## after Init - called by Bean Post Processor");
	}
}


@Component
public class CustomBeanPostProcessor implements BeanPostProcessor {

	@Override
	public Object postProcessBeforeInitialization (Object bean, String beanName) throws BeanException {
		if(bean instanceof LifeCycleDemoBean){
			((LifeCycleDemoBean) bean).beforeInit();
		}
		return bean;
	}
	
	@Override
	public Object postProcessAfterInitialization (Object bean, String beanName) throws BeanException {
		if(bean instanceof LifeCycleDemoBean){
			((LifeCycleDemoBean) bean).afterInit();
		}
		return bean;
	}
}




//Here you need to register a shutdown hook registerShutdownHook() method that is declared on the 
//AbstractApplicationContext class. 
//This will ensures a graceful shutdown and calls the relevant destroy methods.

