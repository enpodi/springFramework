

https://www.udemy.com/spring-framework-5-beginner-to-guru/learn/v4/t/lecture/7403546?start=0
https://www.tutorialspoint.com/spring/spring_bean_post_processors.htm


Instantiate
Populate Properties
Call setBeanName of BeanNameAware
Call SetBeanFactoryof BeanFactoryAware
Call setApplicationContext of ApplicationContextAware
Preinitialization (Bean PostProcessors)
afterPropertiesSet of InitializingBeans
Custom Init Method
Post Initialization (BeanPostProcessors)
  Bean Ready to Use
Container Shutdown
Disposable Bean's destroy()
Call Custom Destroy Method




CODE

@Component
public class LifeCycleDemoBean implements InitializingBean, DisposableBean, BeanNameAware,
        BeanFactoryAware, ApplicationContextAware{

	//override methods

	public LifeCycleDemoBean(){
		sysout("The LifeCycleBean has been terminated");
	}

	@Override
	public void SetApplicationContext(ApplicationContext applicationContext) throws BeanException {
		sysout.("## ApplicationContext has been set");
	}
	
	public void beforeInit(){
		sysout("## before Init - called by Bean Post Processor");
	}
	
	public void afterInit(){
		sysout("## after Init - called by Bean Post Processor");
	}
}


@Component
public class CustomBeanPostProcessor implements BeanPostProcessor {

	@Override
	public Object postProcessBeforeInitialization (Object bean, String beanName) throws BeanException {
		if(bean instanceof LifeCycleDemoBean){
			((LifeCycleDemoBean) bean).beforeInit();
		}
		return bean;
	}
	
	@Override
	public Object postProcessAfterInitialization (Object bean, String beanName) throws BeanException {
		if(bean instanceof LifeCycleDemoBean){
			((LifeCycleDemoBean) bean).afterInit();
		}
		return bean;
	}
}




//Here you need to register a shutdown hook registerShutdownHook() method that is declared on the 
//AbstractApplicationContext class. 
//This will ensures a graceful shutdown and calls the relevant destroy methods.




package com.tutorialspoint;

public class HelloWorld {
   private String message;

   public void setMessage(String message){
      this.message  = message;
   }
   public void getMessage(){
      System.out.println("Your Message : " + message);
   }
   public void init(){
      System.out.println("Bean is going through init.");
   }
   public void destroy(){
      System.out.println("Bean will destroy now.");
   }
}










package com.tutorialspoint;

import org.springframework.beans.factory.config.BeanPostProcessor;
import org.springframework.beans.BeansException;

public class InitHelloWorld implements BeanPostProcessor {
   public Object postProcessBeforeInitialization(Object bean, String beanName) 
      throws BeansException {
      
      System.out.println("BeforeInitialization : " + beanName);
      return bean;  // you can return any other object as well
   }
   public Object postProcessAfterInitialization(Object bean, String beanName) 
      throws BeansException {
      
      System.out.println("AfterInitialization : " + beanName);
      return bean;  // you can return any other object as well
   }
}












package com.tutorialspoint;

import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class MainApp {
   public static void main(String[] args) {
      AbstractApplicationContext context = new ClassPathXmlApplicationContext("Beans.xml");

      HelloWorld obj = (HelloWorld) context.getBean("helloWorld");
      obj.getMessage();
      context.registerShutdownHook();
   }
}







<?xml version = "1.0" encoding = "UTF-8"?>

<beans xmlns = "http://www.springframework.org/schema/beans"
   xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation = "http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

   <bean id = "helloWorld" class = "com.tutorialspoint.HelloWorld"
      init-method = "init" destroy-method = "destroy">
      <property name = "message" value = "Hello World!"/>
   </bean>

   <bean class = "com.tutorialspoint.InitHelloWorld" />

</beans>